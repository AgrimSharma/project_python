from django.db import models
from django.conf import settings
from customer.models import Customer, Shipper, Product
from service_centre.models import Shipment
from location.models import ServiceCenter,Zone
#from service_centre.general_updates import update_shipment_pricing

# Create your models here.
class Billing(models.Model):
    customer = models.ForeignKey(Customer)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    demarrage_charge = models.FloatField(null=True, blank=True, default=0)
    cod_applied_charge = models.FloatField(null=True, blank=True, default=0)
    cod_subtract_charge = models.FloatField(null=True, blank=True, default=0)
    total_cod_charge = models.FloatField(null=True, blank=True, default=0)
    billing_date = models.DateField(null=True, blank=True)
    billing_date_from = models.DateField(null=True, blank=True)
    generation_status = models.IntegerField(max_length=1, default=0)
    payment_status = models.IntegerField(max_length=1, default=0)
    #shipments = models.ManyToManyField(Shipment)
    shipments = models.ManyToManyField(Shipment, related_name="ship_bills")
    demarrage_shipments = models.ManyToManyField(Shipment, related_name="billing_demarrage_shipments")
    service_tax = models.FloatField(null=True, blank=True, default=0)
    education_secondary_tax = models.FloatField(null=True, blank=True, default=0)
    cess_higher_secondary_tax = models.FloatField(null=True, blank=True, default=0)
    bill_generation_date = models.DateTimeField(null=True, blank=True)
    total_charge_pretax = models.FloatField(null=True, blank=True, default=0)
    total_payable_charge = models.FloatField(null=True, blank=True, default=0)
    balance = models.FloatField(null=True, blank=True, default=0)
    received = models.FloatField(null=True, blank=True, default=0)
    adjustment = models.FloatField(null=True, blank=True, default=0)
    adjustment_cr = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment_count = models.FloatField(null=True, blank=True, default=0)
    total_chargeable_weight = models.FloatField(null=True, blank=True, default=0)
    billing_type = models.SmallIntegerField(default=0)

class ProductBilling(models.Model):
    product = models.ForeignKey(Product)
    billing = models.ForeignKey(Billing)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    cod_applied_charge = models.FloatField(null=True, blank=True, default=0)
    cod_subtract_charge = models.FloatField(null=True, blank=True, default=0)
    total_cod_charge = models.FloatField(null=True, blank=True, default=0)

    service_tax = models.FloatField(null=True, blank=True, default=0)
    education_secondary_tax = models.FloatField(null=True, blank=True, default=0)
    cess_higher_secondary_tax = models.FloatField(null=True, blank=True, default=0)
    bill_generation_date = models.DateTimeField(null=True, blank=True)
    total_charge_pretax = models.FloatField(null=True, blank=True, default=0)
    total_payable_charge = models.FloatField(null=True, blank=True, default=0)

    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment_count = models.FloatField(null=True, blank=True, default=0)
    total_chargeable_weight = models.FloatField(null=True, blank=True, default=0)

class BillingSubCustomer(models.Model):
    subcustomer = models.ForeignKey(Shipper)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    total_charge = models.FloatField(null=True, blank=True, default=0)
    demarrage_charge = models.FloatField(null=True, blank=True, default=0)
    cod_applied_charge = models.FloatField(null=True, blank=True, default=0)
    cod_subtract_charge = models.FloatField(null=True, blank=True, default=0)
    total_cod_charge = models.FloatField(null=True, blank=True, default=0)
    billing_date = models.DateField(null=True, blank=True)
    billing_date_from = models.DateField(null=True, blank=True)
    generation_status = models.IntegerField(max_length=1, default=0)
    payment_status = models.IntegerField(max_length=1, default=0)
    shipments = models.ManyToManyField(Shipment)
    demarrage_shipments = models.ManyToManyField(Shipment, related_name="billingsubcustomer_demarrage_shipments")
    billing = models.ForeignKey(Billing, null=True, blank=True)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment_count = models.FloatField(null=True, blank=True, default=0)
    total_chargeable_weight = models.FloatField(null=True, blank=True, default=0)


class BillingCutOff(models.Model):
    cutoff_date = models.DateTimeField()
    added_on = models.DateTimeField()

class BillDocument(models.Model):
    excel_file = models.FileField(upload_to='/tmp/')


def get_latest_billing_cutoff():
    return BillingCutOff.objects.all().order_by('-cutoff_date')[0].cutoff_date

class RateMatrix(models.Model):
    slab = models.IntegerField()
    counter = models.IntegerField()
    rate = models.DecimalField(max_digits=10, decimal_places=2)

class ShipmentBillingQueue(models.Model):
    airwaybill_number = models.BigIntegerField(primary_key=True, db_index=True)
    status = models.IntegerField(default=0, db_index=True) # 0: not billed, 1:billed
    shipment_date = models.DateTimeField(db_index=True)
    shipment_type = models.IntegerField(default=0, db_index=True) # 0: forward, 1: RTS
    updated_on = models.DateTimeField(auto_now_add=True)
    product_type = models.ForeignKey('customer.Product', db_index=True)

class ShipmentCharges(models.Model):
    airwaybill_number = models.BigIntegerField(primary_key=True, db_index=True)
    ref_airwaybill_number = models.BigIntegerField(null=True, blank=True)
    origin_city = models.ForeignKey('location.City',related_name="shipcharges_origin_city", null=True, blank=True)
    destination_city = models.ForeignKey('location.City', related_name="shipcharges_destination_city", null=True, blank=True)
    origin_zone = models.ForeignKey('location.Zone', related_name="shipcharges_origin_zone", null=True, blank=True)
    destination_zone = models.ForeignKey('location.Zone', related_name="shipcharges_destination_zone", null=True, blank=True)
    slabs = models.ManyToManyField(RateMatrix)  #'1 st slab rate/500gm', 'Next slab rate/500gm',
    length = models.IntegerField(default=0, null=True, blank=True)
    bredth = models.IntegerField(default=0, null=True, blank=True)
    height = models.IntegerField(default=0, null=True, blank=True)
    volumetric_weight = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    actual_weight = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    chargeable_weight = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    freight_charge = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    fuel_surcharge = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    rto_charge = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    cod_charge = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    sdl_charge = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    sdd_charge = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    vchc_charge = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    topay_charge = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    reverse_charge = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    net_charge = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    service_tax = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    education_sec_tax = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    cess_higher_secondary_tax = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    grand_total = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)

class BillingHistory_2013_06(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc0613")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)
    updated_on = models.DateTimeField(auto_now_add = True)


class BillingHistory_2013_07(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc0713")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)
    updated_on = models.DateTimeField(auto_now_add = True)


class BillingHistory_2013_08(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc0813")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)
    updated_on = models.DateTimeField(auto_now_add = True)


class BillingHistory_2013_09(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc0913")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)
    updated_on = models.DateTimeField(auto_now_add = True)


class BillingHistory_2013_10(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc1013")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)
    updated_on = models.DateTimeField(auto_now_add = True)


class BillingHistory_2013_11(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc1113")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)
    updated_on = models.DateTimeField(auto_now_add = True)


class BillingHistory_2013_12(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc1213")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)
    updated_on = models.DateTimeField(auto_now_add = True)

class BillingHistory_2013_02(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc0213")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)

class BillingHistory_2013_03(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc0313")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)

class BillingHistory_2013_04(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc0413")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)

class BillingHistory_2013_05(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc0513")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)

class BillingHistory_2014_01(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc0114")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)
    updated_on = models.DateTimeField(auto_now_add = True)

class BillingHistory_2014_02(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc0214")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)
    updated_on = models.DateTimeField(auto_now_add = True)

class BillingHistory_2014_03(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc0314")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)
    updated_on = models.DateTimeField(auto_now_add = True)

class BillingHistory_2014_04(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc0414")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)
    updated_on = models.DateTimeField(auto_now_add = True)

class BillingHistory_2014_05(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc0514")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)
    updated_on = models.DateTimeField(auto_now_add = True)

class BillingHistory_2014_06(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc0614")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)
    updated_on = models.DateTimeField(auto_now_add = True)

class BillingHistory_2014_07(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc0714")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)
    updated_on = models.DateTimeField(auto_now_add = True)

class BillingHistory_2014_08(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc0814")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)
    updated_on = models.DateTimeField(auto_now_add = True)

class BillingHistory_2014_09(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc0914")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)
    updated_on = models.DateTimeField(auto_now_add = True)

class BillingHistory_2014_10(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc1014")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)
    updated_on = models.DateTimeField(auto_now_add = True)

class BillingHistory_2014_11(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc1114")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)
    updated_on = models.DateTimeField(auto_now_add = True)

class BillingHistory_2014_12(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc1214")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)
    updated_on = models.DateTimeField(auto_now_add = True)

class BillingHistory_2015_01(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc0115")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)
    updated_on = models.DateTimeField(auto_now_add = True)

class BillingHistory_2015_02(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc0215")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)
    updated_on = models.DateTimeField(auto_now_add = True)

class BillingHistory_2015_03(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc0315")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)
    updated_on = models.DateTimeField(auto_now_add = True)

class BillingHistory_2015_04(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc0415")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)
    updated_on = models.DateTimeField(auto_now_add = True)

class BillingHistory_2015_05(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc0515")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)
    updated_on = models.DateTimeField(auto_now_add = True)

class BillingHistory_2015_06(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc0615")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)
    updated_on = models.DateTimeField(auto_now_add = True)

class BillingHistory_2015_07(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc0715")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)
    updated_on = models.DateTimeField(auto_now_add = True)

class BillingHistory_2015_08(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc0815")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)
    updated_on = models.DateTimeField(auto_now_add = True)

class BillingHistory_2015_09(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc0915")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)
    updated_on = models.DateTimeField(auto_now_add = True)

class BillingHistory_2015_10(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc1015")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)
    updated_on = models.DateTimeField(auto_now_add = True)

class BillingHistory_2015_11(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc1115")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)
    updated_on = models.DateTimeField(auto_now_add = True)

class BillingHistory_2015_12(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc1215")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)
    updated_on = models.DateTimeField(auto_now_add = True)

class BillingHistory_2016_01(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc0116")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)
    updated_on = models.DateTimeField(auto_now_add = True)

class BillingHistory_2016_02(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc0216")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)
    updated_on = models.DateTimeField(auto_now_add = True)

class BillingHistory_2016_03(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc0316")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)
    updated_on = models.DateTimeField(auto_now_add = True)

class BillingHistory_2016_04(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc0416")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)
    updated_on = models.DateTimeField(auto_now_add = True)

class BillingHistory_2016_05(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc0516")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)
    updated_on = models.DateTimeField(auto_now_add = True)

class BillingHistory_2016_06(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc0616")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)
    updated_on = models.DateTimeField(auto_now_add = True)

class BillingHistory_2016_07(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc0716")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)
    updated_on = models.DateTimeField(auto_now_add = True)

class BillingHistory_2016_08(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc0816")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)
    updated_on = models.DateTimeField(auto_now_add = True)

class BillingHistory_2016_09(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc0916")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)
    updated_on = models.DateTimeField(auto_now_add = True)

class BillingHistory_2016_10(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc1016")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)
    updated_on = models.DateTimeField(auto_now_add = True)

class BillingHistory_2016_11(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc1116")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)
    updated_on = models.DateTimeField(auto_now_add = True)

class BillingHistory_2016_12(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc1216")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)
    updated_on = models.DateTimeField(auto_now_add = True)

class BillingHistory_2017_01(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc0117")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)
    updated_on = models.DateTimeField(auto_now_add = True)

class BillingHistory_2017_02(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc0217")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)
    updated_on = models.DateTimeField(auto_now_add = True)

class BillingHistory_2017_03(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc0317")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)
    updated_on = models.DateTimeField(auto_now_add = True)

class BillingHistory_2017_04(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc0417")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)
    updated_on = models.DateTimeField(auto_now_add = True)

class BillingHistory_2017_05(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc0517")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)
    updated_on = models.DateTimeField(auto_now_add = True)

class BillingHistory_2017_06(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc0617")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)
    updated_on = models.DateTimeField(auto_now_add = True)

class BillingHistory_2017_07(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc0717")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)
    updated_on = models.DateTimeField(auto_now_add = True)

class BillingHistory_2017_08(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc0817")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)
    updated_on = models.DateTimeField(auto_now_add = True)

class BillingHistory_2017_09(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc0917")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)
    updated_on = models.DateTimeField(auto_now_add = True)

class BillingHistory_2017_10(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc1017")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)
    updated_on = models.DateTimeField(auto_now_add = True)

class BillingHistory_2017_11(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc1117")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)
    updated_on = models.DateTimeField(auto_now_add = True)

class BillingHistory_2017_12(models.Model):
    actual_weight = models.FloatField(default=0.0, null=True, blank=True)
    cod_charge = models.FloatField(blank=True,null=True, default=0)
    collectable_value = models.FloatField(null=True, blank=True)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    inscan_date = models.DateTimeField(null=True, blank=True)
    original_dest = models.ForeignKey(ServiceCenter, null=True, blank=True, related_name="billing_history_sc1217")
    remarks = models.CharField(max_length=100, null=True, blank=True)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    remitted_amount = models.FloatField(blank=True,null=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment = models.ForeignKey(Shipment)
    subcustomer = models.ForeignKey(Shipper)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    volumetric_weight = models.FloatField(default=0.0, null=True, blank=True)
    updated_on = models.DateTimeField(auto_now_add = True)


class BillingPreview(models.Model):
    customer = models.ForeignKey(Customer)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    demarrage_charge = models.FloatField(null=True, blank=True, default=0)
    cod_applied_charge = models.FloatField(null=True, blank=True, default=0)
    cod_subtract_charge = models.FloatField(null=True, blank=True, default=0)
    total_cod_charge = models.FloatField(null=True, blank=True, default=0)
    billing_date = models.DateField(null=True, blank=True)
    billing_date_from = models.DateField(null=True, blank=True)
    bill_generation_date = models.DateTimeField(null=True, blank=True)
    generation_status = models.IntegerField(max_length=1, default=0)
    payment_status = models.IntegerField(max_length=1, default=0)
    shipments = models.ManyToManyField(Shipment)
    service_tax = models.FloatField(null=True, blank=True, default=0)
    education_secondary_tax = models.FloatField(null=True, blank=True, default=0)
    cess_higher_secondary_tax = models.FloatField(null=True, blank=True, default=0)
    total_charge_pretax = models.FloatField(null=True, blank=True, default=0)
    total_payable_charge = models.FloatField(null=True, blank=True, default=0)
    balance = models.FloatField(null=True, blank=True, default=0)
    received = models.FloatField(null=True, blank=True, default=0)
    adjustment = models.FloatField(null=True, blank=True, default=0)
    adjustment_cr = models.FloatField(null=True, blank=True, default=0)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment_count = models.FloatField(null=True, blank=True, default=0)
    total_chargeable_weight = models.FloatField(null=True, blank=True, default=0)


class BillingSubCustomerPreview(models.Model):
    subcustomer = models.ForeignKey(Shipper)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    total_charge = models.FloatField(null=True, blank=True, default=0)
    demarrage_charge = models.FloatField(null=True, blank=True, default=0)
    cod_applied_charge = models.FloatField(null=True, blank=True, default=0)
    cod_subtract_charge = models.FloatField(null=True, blank=True, default=0)
    total_cod_charge = models.FloatField(null=True, blank=True, default=0)
    billing_date = models.DateField(null=True, blank=True)
    billing_date_from = models.DateField(null=True, blank=True)
    generation_status = models.IntegerField(max_length=1, default=0)
    payment_status = models.IntegerField(max_length=1, default=0)
    shipments = models.ManyToManyField(Shipment)
    billing = models.ForeignKey(Billing, null=True, blank=True)
    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment_count = models.FloatField(null=True, blank=True, default=0)
    total_chargeable_weight = models.FloatField(null=True, blank=True, default=0)


class ProvisionalBillingQueue(models.Model):
    customer = models.ForeignKey(Customer, null=True, blank=True)
    billing_from = models.DateField()
    billing_to = models.DateField()
    status = models.SmallIntegerField(default=0)
    bills = models.ManyToManyField(BillingPreview)
    created_on = models.DateTimeField(auto_now_add=True)
    updated_on = models.DateTimeField(auto_now=True)

class ProvisionalProductBilling(models.Model):
    product = models.ForeignKey(Product)
    billing = models.ForeignKey(BillingPreview)
    freight_charge = models.FloatField(null=True, blank=True, default=0)
    sdl_charge = models.FloatField(null=True, blank=True, default=0)
    fuel_surcharge = models.FloatField(null=True, blank=True, default=0)
    valuable_cargo_handling_charge = models.FloatField(blank=True,null=True, default=0)
    to_pay_charge = models.FloatField(null=True, blank=True, default=0)
    rto_charge = models.FloatField(null=True, blank=True, default=0)
    cod_applied_charge = models.FloatField(null=True, blank=True, default=0)
    cod_subtract_charge = models.FloatField(null=True, blank=True, default=0)
    total_cod_charge = models.FloatField(null=True, blank=True, default=0)

    service_tax = models.FloatField(null=True, blank=True, default=0)
    education_secondary_tax = models.FloatField(null=True, blank=True, default=0)
    cess_higher_secondary_tax = models.FloatField(null=True, blank=True, default=0)
    bill_generation_date = models.DateTimeField(null=True, blank=True)
    total_charge_pretax = models.FloatField(null=True, blank=True, default=0)
    total_payable_charge = models.FloatField(null=True, blank=True, default=0)

    sdd_charge = models.FloatField(null=True, blank=True, default=0)
    reverse_charge = models.FloatField(null=True, blank=True, default=0)
    shipment_count = models.FloatField(null=True, blank=True, default=0)
    total_chargeable_weight = models.FloatField(null=True, blank=True, default=0)

class BillingQueue(models.Model):
    """
    status:
          0 - Added to queue
          1 - Processing Started
          2 - Report generation completed
    """
    customer = models.ForeignKey(Customer, null=True, blank=True)
    billing_from = models.DateField()
    billing_to = models.DateField()
    status = models.SmallIntegerField(default=0)
    bills = models.ManyToManyField(Billing)
    created_on = models.DateTimeField(auto_now_add=True)
    updated_on = models.DateTimeField(auto_now=True)

class CustomerBillingReportManager(models.Manager):

    def update_or_create(self, billqueue):
        bills = billqueue.bills.all()
        for bill in bills:
            CustomerBillingReport.objects.get_or_create(
                billqueue=billqueue, billing=bill, customer=customer)
        return True

class CustomerBillingReport(models.Model):
    """
    status:
        0 - Added to queue
        1 - Processing Started
        2 - Report generation completed

    bill_type:
        0 - Normal
        1 - Ebs
        2 - Reverse
    """
    billqueue = models.ForeignKey(BillingQueue)
    customer = models.ForeignKey(Customer)
    billing = models.ForeignKey(Billing)
    bill_type = models.SmallIntegerField(default=0)
    status = models.SmallIntegerField(default=0)
    created_on = models.DateTimeField(auto_now_add=True)
    updated_on = models.DateTimeField(auto_now=True)

    invoice_report = models.URLField(max_length=300, default='')
    headless_invoice_report = models.URLField(max_length=300, default='')
    awb_pdf_report = models.URLField(max_length=300, default='')
    awb_excel_report = models.URLField(max_length=300, default='')
    ebs_invoice_report = models.URLField(max_length=300, default='')
    headless_ebs_invoice_report = models.URLField(max_length=300, default='')

    objects = CustomerBillingReportManager()

    class Meta:
        unique_together = ('customer', 'billing', 'billqueue')

    def __unicode__(self):
        return '{0} - {1}'.format(self.billqueue.id, self.billing.id)

class BillingReportQueue(models.Model):
    """
    status:
          0 - Added to queue
          1 - Processing Started
          2 - Report generation completed
    """
    billqueue = models.ForeignKey(BillingQueue)

    customer = models.ForeignKey(Customer, null=True, blank=True)
    invoice_report = models.BooleanField(default=False)
    headless_invoice_report = models.BooleanField(default=False)
    awb_pdf_report = models.BooleanField(default=False)
    awb_excel_report = models.BooleanField(default=False)
    ebs_invoice_report = models.BooleanField(default=False)
    headless_ebs_invoice_report = models.BooleanField(default=False)
    summary = models.BooleanField(default=False)
    msr = models.BooleanField(default=False)

    status = models.SmallIntegerField(default=0)
    created_on = models.DateTimeField(auto_now_add=True)
    updated_on = models.DateTimeField(auto_now=True)

class BackdatedBatch(models.Model):
    date_from = models.DateTimeField(null=True, blank=True)
    date_to = models.DateTimeField(null=True, blank=True)
    count = models.BigIntegerField(default=0)
    processed_count = models.BigIntegerField(default=0)
    status = models.SmallIntegerField(default=0,db_index=True)   #0=in queue, 1 in progress,2 completed
    customer  = models.ForeignKey(Customer,db_index=True)
    product_type = models.ForeignKey('customer.Product', db_index=True, blank=True, null=True)
    org_zone  = models.ForeignKey(Zone,related_name='back_dated_org_zone',db_index=True,null=True)
    dest_zone = models.ForeignKey(Zone,related_name='back_dated_dest_zone',db_index=True,null=True)
    added_on = models.DateTimeField(auto_now_add=True,db_index=True)
    updated_on = models.DateTimeField(auto_now=True,db_index=True)

class BackdatedShipmentBillingQueue(models.Model):
    backdated_bacth =  models.ForeignKey(BackdatedBatch)
    airwaybill_number = models.BigIntegerField(primary_key=True, db_index=True)
    status = models.IntegerField(default=0, db_index=True) # 0: not billed, 1:billed
    shipment_date = models.DateTimeField(db_index=True)
    shipment_type = models.IntegerField(default=0, db_index=True) # 0: forward, 1: RTS
    updated_on = models.DateTimeField(auto_now_add=True)
    product_type = models.ForeignKey('customer.Product', db_index=True, null=True, blank=True)


class Taxes(models.Model):
    service_tax = models.DecimalField(max_digits=6, decimal_places=2)
    effective_date = models.DateField() 
