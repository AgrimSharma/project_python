# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-06-16 10:40
from __future__ import unicode_literals

from django.db import migrations

def createTaskTaggingEntries(apps, schema_editor):
    Task = apps.get_model("projects", "Task")
    StoryTag = apps.get_model("projects", "StoryTag")
    TaskTagging = apps.get_model("projects", "TaskTagging")
    
    for task in Task.objects.exclude(tags_cache=''):
        tag_cache = task.tags_cache
        project = task.story.project
        if tag_cache is not None:
            input_tags = [t.strip() for t in tag_cache.split(',')]
        else:
            input_tags = []

        tags_to_add = []
        for input_tag in input_tags:
            found = False
            for saved_tag in task.task_tags.all():
                if saved_tag.tag.name == input_tag:
                    found = True
            if not found and input_tag != "":
                tags_to_add.append( input_tag )

        for tag_name in tags_to_add:
            tag_name = tag_name[:32]  # Enforce max tag length.
            existing = list(project.tags.filter(name__iexact=tag_name))
            if len(existing) > 0:
                tag = existing[0]
            else:
                tag = StoryTag(name=tag_name, project=project)
                tag.save()
            TaskTagging(tag=tag, task=task).save()

class Migration(migrations.Migration):

    dependencies = [
        ('projects', '0022_auto_20160614_1604'),
    ]

    operations = [
        migrations.RunPython(createTaskTaggingEntries, lambda a, b: None),
    ]
